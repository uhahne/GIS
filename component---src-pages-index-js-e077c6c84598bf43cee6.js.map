{"version":3,"file":"component---src-pages-index-js-e077c6c84598bf43cee6.js","mappings":"6ZA2IA,UAnIqB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACPC,EAAaD,EAAKE,OAAzBC,MACR,EAAkCC,EAAAA,SACd,oBAAXC,QAAiE,MAAvCC,eAAeC,QAAQ,cADnDC,EAAP,KAAkBC,EAAlB,KAcA,OACE,QAAC,IAAD,MACE,oBACE,cACEC,IAAG,GAKFV,EAAKW,KAAKC,aAAaC,QAE1B,aACEH,IAAG,GAKFV,EAAKW,KAAKC,aAAaE,QAAQC,KAAI,SAACC,EAAQC,GAC3C,OACE,wBACGA,EAAQ,GAAK,OACd,QAAC,EAAAC,KAAD,CAAMC,GAAIH,EAAOI,MAAOJ,EAAOK,YAKvC,iBACEC,KAAK,WACLC,QAASf,EACTgB,SAvCR,WACMlB,eAAeC,QAAQ,cACzBD,eAAemB,WAAW,aAC1BhB,GAAa,KAEbH,eAAeoB,QAAQ,YAAa,QACpCjB,GAAa,KAkCTkB,GAAG,iBACHjB,KAAKA,EAAAA,EAAAA,IAAF,iBACekB,EAAAA,EAAAA,GAAO,EAAI,GAD1B,WAIL,iBAAOC,QAAQ,kBAAf,aACC5B,EAASc,KAAI,gBAASe,EAAT,EAAGC,KAAH,OACZ,eAAKC,IAAKF,EAAQH,KAChB,QAAC,EAAAT,KAAD,CACEC,GAAIW,EAAQG,OAAOC,KAAO,IAC1BxB,IAAG,IAKH,cACEA,KAAKA,EAAAA,EAAAA,IAAF,kBACgBkB,EAAAA,EAAAA,GAAO,EAAI,GAD3B,SAIFE,EAAQK,YAAYtB,MAAO,KAC5B,gBACEH,IAAG","sources":["webpack://gatsby-gis/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/react\";\nimport { Link, graphql } from \"gatsby\";\nimport { rhythm } from \"../utils/typography\";\nimport Layout from \"../components/layout\";\n//import \"highlight.js/styles/atom-one-dark.css\";\n//import \"highlight.js/styles/atom-one-light.css\";\n\nconst LectureIndex = ({ data }) => {\n  const { edges: lectures } = data.allMdx;\n  const [lightMode, setLightMode] = React.useState(\n    typeof window !== \"undefined\" && sessionStorage.getItem(\"lightMode\") != null\n  );\n\n  function changeTheme() {\n    if (sessionStorage.getItem(\"lightMode\")) {\n      sessionStorage.removeItem(\"lightMode\");\n      setLightMode(false);\n    } else {\n      sessionStorage.setItem(\"lightMode\", \"true\");\n      setLightMode(true);\n    }\n  }\n\n  return (\n    <Layout>\n      <div>\n        <h1\n          css={css`\n            display: inline-block;\n            border-bottom: 1px solid;\n          `}\n        >\n          {data.site.siteMetadata.title}\n        </h1>\n        <p\n          css={css`\n            font-size: 1.3em;\n            margin-top: -0.5em;\n          `}\n        >\n          {data.site.siteMetadata.authors.map((author, index) => {\n            return (\n              <>\n                {index > 0 && \" & \"}\n                <Link to={author.link}>{author.name}</Link>\n              </>\n            );\n          })}\n        </p>\n        <input\n          type=\"checkbox\"\n          checked={lightMode}\n          onChange={changeTheme}\n          id=\"lightModeCheck\"\n          css={css`\n            margin-right: ${rhythm(1 / 4)};\n          `}\n        />\n        <label htmlFor=\"lightModeCheck\">Lightmode</label>\n        {lectures.map(({ node: lecture }) => (\n          <div key={lecture.id}>\n            <Link\n              to={lecture.fields.slug + \"0\"}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n              <h3\n                css={css`\n                  margin-bottom: ${rhythm(1 / 4)};\n                `}\n              >\n                {lecture.frontmatter.title}{\" \"}\n                <span\n                  css={css`\n                    color: #555;\n                  `}\n                >\n                </span>\n              </h3>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  );\n};\n/* Übersicht mit Datum:\n<h3\n  css={css`\n    margin-bottom: ${rhythm(1 / 4)};\n  `}\n>\n  {lecture.frontmatter.title}{\" \"}\n  <span\n    css={css`\n      color: #555;\n    `}\n  >\n    — {lecture.frontmatter.date}\n  </span>\n</h3>\n*/\n\n//<h4>{data.allMdx.totalCount} Stunden</h4>\n//<p>{lecture.excerpt}</p>\n\nexport const pageQuery = graphql`\n  query lectureIndex {\n    allMdx(sort: { fields: [frontmatter___date], order: ASC }) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date(formatString: \"DD. MMMM YYYY\", locale: \"de\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        authors {\n          name\n          link\n        }\n      }\n    }\n  }\n`;\n\nexport default LectureIndex;\n"],"names":["data","lectures","allMdx","edges","React","window","sessionStorage","getItem","lightMode","setLightMode","css","site","siteMetadata","title","authors","map","author","index","Link","to","link","name","type","checked","onChange","removeItem","setItem","id","rhythm","htmlFor","lecture","node","key","fields","slug","frontmatter"],"sourceRoot":""}