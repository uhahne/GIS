{
    "componentChunkName": "component---src-components-lecture-page-layout-js",
    "path": "/lecture/json-localStorage/8",
    "result": {"data":{"mdx":{"id":"6bbc4914-cbfb-535a-a50d-fa5514bb91ca","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"JSON und localStorage\",\n  \"date\": \"2023-12-05T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Beispiel localStorage\"), mdx(\"p\", null, \"Informationen speichern, so dass sie beim neu laden der Seite noch da sind.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<span id=\\\"counter\\\"></span>\\n<button id=\\\"plusOne\\\">+</button>\\n<button id=\\\"reset\\\">reset</button>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const counter = document.getElementById('counter');\\nconst plusOne = document.getElementById('plusOne');\\nconst reset = document.getElementById('reset');\\n\\nlet value = Number(localStorage.getItem('value'));\\ncounter.textContent = value;\\nplusOne.addEventListener('click', () => {\\n  setValue(value + 1);\\n});\\nreset.addEventListener('click', () => {\\n  setValue(0);\\n});\\n\\nfunction setValue(x) {\\n  value = x;\\n  counter.textContent = value;\\n  localStorage.setItem('value', value);\\n}\\n\")), mdx(\"h1\", null, \"Datenspeicherung im Browser (Client-seitig)\"), mdx(\"p\", null, \"Dauerhafte Speicherung von Daten auf dem Server (siehe Folgestunden).\"), mdx(\"h3\", null, \"Bedarf zur lokalen Speicherung von Daten\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"nur tempor\\xE4r ben\\xF6tigte Daten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fehlende Internetanbindung\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lokale Kopie der Serverdaten\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Kommunikation mit Server\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HTTP Protokoll ist \\\"stateless\\\" (Zustandslos) -> alle Informationen zur Bearbeitung der Anfrage m\\xFCssen bei jedem Request mitgesendet werden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"auf der User Seite gespeicherte Daten k\\xF6nnen bei Anfragen mitgesendet werden (z. B. Session-ID, Authentifizierungs-Token, Einstellungen)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server kann den User \\xFCber diese Daten tracken (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://de.wikipedia.org/wiki/Datenschutz-Grundverordnung\"\n  }, \"DSGVO\"), \" bei personenbezogenen Daten ber\\xFCcksichtigen)\")))), mdx(\"h3\", null, \"Speicheroptionen\"), mdx(\"p\", null, \"Automatische Speicherung in lokalen Dateien nicht m\\xF6glich:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript hat nur durch User Interaktion Zugriff auf lokale Dateien des Rechners \", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-localfileaccess\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-localfileaccess\",\n    \"className\": \"footnote-ref\"\n  }, \"localfileaccess\")))), mdx(\"p\", null, \"Speicherm\\xF6glichkeiten in der Browser Anwendung (offline verf\\xFCgbar): \", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-browsercache\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-browsercache\",\n    \"className\": \"footnote-ref\"\n  }, \"browsercache\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Cookies\"), \" (einzelne Informationen, wenige KB)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Web Storage\"), \": Session Storage, Local Storage (Zugriff synchron, ca. 5MB Speicher)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Datenbanken\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/API/IndexedDB_API\"\n  }, \"IndexedDB\"), \" (Zugriff asynchron, f\\xFCr gro\\xDFe Datenmengen, API komplizierter, nicht von allen Browsern unterst\\xFCtzt, Datenbankfunktionalit\\xE4t) \", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-websql\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-websql\",\n    \"className\": \"footnote-ref\"\n  }, \"websql\")))), mdx(\"p\", null, \"-> In Google Chrome einsehbar unter der Entwicklungsumgebung im Application Tab\"), mdx(\"h1\", null, \"Cookies\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Kleinere Informationen, z. B. zur Authentifizierung des Users (wenig Speicherplatz vorgesehen, ca. 4 KB f\\xFCr ca. 20 Cookies pro Seite)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Werden automatisch bei jedem Request mit an den Server gesendet (Teil des HTTP Protokolls)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cookie besteht aus key/value Paar mit zus\\xE4tzlichen optionalen Informationen, z. B.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"path: default aktueller Pfad; Cookie steht f\\xFCr Pfad und alle Unterseiten zur Verf\\xFCgung\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"expires / max-age: default = Cookie beim Schlie\\xDFen des Browsers l\\xF6schen; kann auf ein Datum oder auf Anzahl Sekunden gesetzt werden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sicherheitsrelevante Optionen\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Werden meist vom Server gesendet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"K\\xF6nnen aber auch \\xFCber JavaScript bearbeitet werden (au\\xDFer bei httpOnly Cookie Option)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"document.cookie = \\\"key=value; option1; option2\\\";\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-TypeScript\",\n    \"metastring\": \"Code\",\n    \"Code\": true\n  }, \"document.cookie = \\\"username=Smith\\\";\\ndocument.cookie = \\\"addsAbout=pets; expires=Tue, 15 Mar 3022 12:00:00 UTC; path=/\\\";\\nconsole.log(document.cookie);\\n\")), mdx(\"h1\", null, \"Storage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Speichern von key - value Paaren, beide als Strings (Tabelle mit zwei Spalten)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zwei verschiedene Speicherbereiche: Local und Session Storage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zum Speichern von nicht essenziellen oder wiederherstellbaren Daten\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Einstellungen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Daten die vom Server geholt und lokal vorgehalten werden (z. B. f\\xFCr Offline Nutzung)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"erst seit HTML5\")), mdx(\"h3\", null, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/API/Window/sessionStorage\"\n  }, \"Session Storage\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zugriff: window.sessionStorage (Storage Objekt)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nur w\\xE4hrend Browser Sitzung (Session) verf\\xFCgbar\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Daten werden mit Ende der Sitzung gel\\xF6scht\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bleibt erhalten bei Reload der Seite\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wird gel\\xF6scht beim Schlie\\xDFen des Browsers oder Tabs oder \\xD6ffnen in neuem Tab\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"kann vom User gel\\xF6scht werden\")))), mdx(\"h3\", null, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/API/Window/localStorage\"\n  }, \"Local Storage\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zugriff: window.localStorage (Storage Objekt)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"permanente Speicherung (kein Verfallsdatum)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bleibt erhalten bei Reload der Seite, oder Schlie\\xDFen des Browsers/Tabs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"kann vom User gel\\xF6scht werden\")))), mdx(\"h3\", null, \"Funktionen\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Funktion\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"setItem(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \", \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"value\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Neuer Eintrag mit \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \" und \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"value\"), \", bzw. Eintrag anpassen, wenn \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \" schon vorhanden\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"getItem(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"value\"), \" f\\xFCr den angegebenen \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \" abrufen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"removeItem(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Eintrag mit dem angegebenen \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \" l\\xF6schen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"clear()\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Alle Eintr\\xE4ge im Store l\\xF6schen\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"localStorage.setItem('username', 'Mr. X');\\nsessionStorage.setItem('username', 'Mrs. Y');\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"console.log(localStorage.getItem('username'));\\nconsole.log(sessionStorage.getItem('username'));\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"localStorage.clear();\\nsessionStorage.clear();\\n\")), mdx(\"p\", null, \"Alle keys ausgeben lassen (mit \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"length\"), \" und \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"key\"), \" Funktion f\\xFCr \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Storage\"), \" Objekte):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"for (let i = 0; i < localStorage.length; i++) {\\n  console.log(localStorage.key(i));\\n}\\n\")), mdx(\"h1\", null, \"JavaScript Prototypen\"), mdx(\"p\", null, \"JavaScript ist eine Prototyp-basierte Sprache (klassenlose Objektorientierung):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Objekt kann (beliebiges) anderes Objekt als Prototyp referenzieren und dadurch dessen Eigenschaften und Funktionen \\xFCbernehmen (ggf. durch eigene \\xFCberdecken)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Es gibt nur Objekte und keine Klassen als Vorlagen f\\xFCr Objekte (Prototyp Objekt Ersatz f\\xFCr Klasse, wenn mehrere dieses referenzieren)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript Klassen wurden mit ECMAScript 2015 eingef\\xFChrt und verbergen die Prototyp Struktur\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\"\n  }, \"mehr Informationen\"))), mdx(\"p\", null, \"=> Verhalten wie bei Klassen-basierter Sprache, solange keine Objekte (vor allem auch keine als Prototyp verwendeten Objekte) zu Laufzeit ver\\xE4ndert werden.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Unterschiede\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Klassen-basiert (Java)\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Prototyp-basiert (JavaScript)\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Datentyp\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"wird durch Klasse beschrieben \", mdx(\"br\", null), \"-> jedes Objekt gleich aufgebaut\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"wird durch Referenz auf ein Prototyp Objekt festgelegt \", mdx(\"br\", null), \"-> referenzierter Prototyp gleich, aber Objekt erweiterbar\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Objekt erweitern\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"nicht m\\xF6glich (in einigen Sprachen Klasse erweiterbar)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Objekt Eigenschaften und Funktionen k\\xF6nnen zur Laufzeit hinzugef\\xFCgt oder gel\\xF6scht werden \", mdx(\"br\", null), \" (prinzipiell auch bei Objekten, die als Prototyp verwendet werden)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Objekt anlegen\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"nur mit new (bei Array und String auch mit Literalen)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"mit new oder Objektliteralen (direkt beschreiben)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Vererbung\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"wird \\xFCber die Klassenstruktur beschrieben\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"wird durch Prototypenkette realisiert (Prototyp der selbst wieder auf Prototyp verweist)\")))), mdx(\"h3\", null, \"Vererbung durch Prototypenkette\"), mdx(\"p\", null, \"Vererbung wird erreicht, indem eine Kette von als Prototypen verwendeten Objekten gebildet wird.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/3968f8b809fe5c6f7520ffe2b2f8b2ed/prototypeChain.svg\",\n    \"alt\": \"Prototypenkette Beispiel\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"class Test {\\n  constructor() {\\n    this.a = 1;\\n  }\\n  func_a() {}\\n}\\nclass Test2 extends Test {\\n  constructor() {\\n    super();\\n    this.b = 2;\\n  }\\n  func_b() {}\\n}\\nlet t = new Test2();\\nconsole.log(t); // auf Konsole betrachten\\nlet t2 = new Test2();\\nt2.c = 3;\\nconsole.log(t2);\\nconsole.log(`${t instanceof Test2}, ${t2 instanceof Test2}`);\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\"\n  }, \"mehr Informationen\")), mdx(\"h1\", null, \"JavaScript Objekt - Literale Schreibweise\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript Objekte k\\xF6nnen \\xFCber \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{}\"), \" direkt im Code definiert werden (ohne \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"new\"), \")\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const p = { name: 'Anna', alter: 23 };\\nconsole.log(p);\\n\\nconst gruppe = [\\n  { name: 'Anna', alter: 23 },\\n  { name: 'Oliver', alter: 22 },\\n  { name: 'Peter', alter: 21 },\\n];\\nfor (let m of gruppe) {\\n  console.log(m.name);\\n}\\n\")), mdx(\"h3\", null, \"kann auch Funktionen beinhalten\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const p = {\\n  name: 'Anna',\\n  alter: 23,\\n  print: function () {\\n    console.log(this.name);\\n  },\\n};\\np.print();\\n\")), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://www.json.org/json-de.html\"\n  }, \"JSON (JavaScript Object Notation)\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript Objekt als Text (String) darstellen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zur Speicherung oder zum Austausch von Objektdaten (z. B. Verwendung in localStorage, Requests)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1997 von \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=-C-JoyNuQJs\"\n  }, \"Douglas Crockford spezifiziert\"), \" (schlichtere Alternative zu XML) -> JavaScript Objektliterale als Vorbild\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unterschiede von JSON zu JavaScript Objektliteralen:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hochkommas um die Eigenschafts-Bezeichner verpflichtend (Name von Name/Wert Paar)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Doppelte Anf\\xFChrungszeichen verwenden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"nur bestimmte Werte zugelassen (keine Ausdr\\xFCcke, keine Funktionen)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Verwendung unabh\\xE4ngig von Programmiersprachen (nicht nur mit JavaScript)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"standardisierte Vorgabe, wie Objektdaten notiert werden\")), mdx(\"h3\", null, \"Aufbau\"), mdx(\"p\", null, \"zwei Strukturen (finden sich in den meisten Programmiersprachen):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Name/Wert Paare (entspricht JavaScript Object)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\"name\\\": wert\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mehrere getrennt durch Komma\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wert: string, zahl, true, false, Object, Array, null\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"umschlossen mit geschweiften Klammern {}\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Liste (entspricht JavaScript Array)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Werte getrennt durch Komma\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"umschlossen mit eckigen Klammern []\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"name\\\": \\\"Anna\\\",\\n  \\\"alter\\\": 23\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"[\\\"Anna\\\", \\\"Ben\\\"]\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"name\\\": \\\"Lasagne\\\",\\n  \\\"zutaten\\\": [\\n    {\\n      \\\"name\\\": \\\"Tomatensauce\\\",\\n      \\\"menge\\\": 500,\\n      \\\"einheit\\\": \\\"ml\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Nudelplatten\\\",\\n      \\\"menge\\\": 8,\\n      \\\"einheit\\\": \\\"St\\xFCck\\\"\\n    }\\n  ],\\n  \\\"zubereitungszeit\\\": 120\\n}\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://json.parser.online.fr/\"\n  }, \"JSON Parser Online\")), mdx(\"h1\", null, \"JSON Konvertierung\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Funktion\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Bedeutung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"JSON.stringify(objectRef)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Objekt in String wandeln\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"JSON.parse(jsonString)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"String in Objekt wandeln\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"let p = { name: 'Anna', alter: 23 };\\n\\nlet pAsJson = JSON.stringify(p);\\nconsole.log(pAsJson);\\n\\nlet pParsedBack = JSON.parse(pAsJson);\\nconsole.log(pParsedBack);\\n\\nlet p2 = JSON.parse('{\\\"name\\\": \\\"Ben\\\", \\\"alter\\\":22}');\\nconsole.log(p2);\\n\")), mdx(\"p\", null, \"Vorgehen, wenn nicht nur Daten von Objekten, sondern auch Methoden wiederhergestellt werden sollen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"class Person {\\n  constructor(name, alter) {\\n    this.name = name;\\n    this.alter = alter;\\n  }\\n\\n  print() {\\n    console.log(`Hallo ich bin ${this.name}`);\\n  }\\n}\\n\\nlet p = new Person('Anna', 23);\\n\\nlet pAsJson = JSON.stringify(p);\\nlet pParsedBack = JSON.parse(pAsJson);\\n\\n// funktioniert nicht:\\n// pParsedBack.print();\\n\\nlet p2 = { name: 'Anna', alter: 23 };\\n// funktioniert auch nicht:\\n// p2.print();\\n\\n// funktioniert:\\nlet pAsObject = new Person(pParsedBack.name, pParsedBack.alter);\\npAsObject.print();\\n\\nconsole.log(pParsedBack);\\nconsole.log(pAsObject);\\n\")), mdx(\"h1\", null, \"Beispielanwendung\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anwendung bisheriger Themen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"farbige Kreise durch Klick auf Canvas zeichnen und speichern\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<input id=\\\"color\\\" type=\\\"color\\\" />\\n<canvas id=\\\"canvas\\\" width=\\\"300px\\\" , height=\\\"200px\\\" />\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"#canvas {\\n  border: 1px solid;\\n}\\n\")), mdx(\"details\", null, mdx(\"summary\", null, \"1. Schritt: Bei Klick auf Canvas farbigen Kreis zeichnen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const canvas = document.getElementById('canvas');\\ncanvas.addEventListener('click', drawDot);\\nfunction drawDot(event) {\\n  const color = document.getElementById('color');\\n  const canvas = event.currentTarget;\\n  const ctx = canvas.getContext('2d');\\n  const x = event.x - canvas.offsetLeft;\\n  const y = event.y - canvas.offsetTop;\\n  ctx.fillStyle = color.value;\\n  ctx.beginPath();\\n  ctx.moveTo(x, y);\\n  ctx.arc(x, y, 10, 0, 2 * Math.PI);\\n  ctx.fill();\\n}\\n\"))), mdx(\"details\", null, mdx(\"summary\", null, \"2. Schritt: Code f\\xFCr Kreise in Klasse auslagern:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"class Dot {\\n  constructor(x, y, color) {\\n    this.x = x;\\n    this.y = y;\\n    this.color = color;\\n  }\\n\\n  draw(ctx) {\\n    ctx.fillStyle = this.color;\\n    ctx.beginPath();\\n    ctx.moveTo(this.x, this.y);\\n    ctx.arc(this.x, this.y, 10, 0, 2 * Math.PI);\\n    ctx.fill();\\n  }\\n}\\n\\nconst canvas = document.getElementById('canvas');\\nconst ctx = canvas.getContext('2d');\\ncanvas.addEventListener('click', drawDot);\\nfunction drawDot(event) {\\n  const color = document.getElementById('color');\\n  const x = event.x - canvas.offsetLeft;\\n  const y = event.y - canvas.offsetTop;\\n  const newDot = new Dot(x, y, color.value);\\n  newDot.draw(ctx);\\n}\\n\"))), mdx(\"details\", null, mdx(\"summary\", null, \"3. Schritt: Gezeichnete Kreise in localStorage speichern:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"class Dot {\\n  constructor(x, y, color) {\\n    this.x = x;\\n    this.y = y;\\n    this.color = color;\\n  }\\n\\n  draw(ctx) {\\n    ctx.fillStyle = this.color;\\n    ctx.beginPath();\\n    ctx.moveTo(this.x, this.y);\\n    ctx.arc(this.x, this.y, 10, 0, 2 * Math.PI);\\n    ctx.fill();\\n  }\\n}\\n\\nclass Dots {\\n  constructor(storageKey = 'dots') {\\n    this.storageKey = storageKey;\\n    this.dots = [];\\n    const dotsJSON = localStorage.getItem(storageKey) || '[]';\\n    for (let dot of JSON.parse(dotsJSON)) {\\n      this.dots[this.dots.length] = new Dot(dot.x, dot.y, dot.color);\\n    }\\n  }\\n\\n  storeDot(dot) {\\n    this.dots[this.dots.length] = dot;\\n    localStorage.setItem(this.storageKey, JSON.stringify(this.dots));\\n  }\\n\\n  drawDots(ctx) {\\n    for (let dot of this.dots) {\\n      dot.draw(ctx);\\n    }\\n  }\\n}\\n\\nconst canvas = document.getElementById('canvas');\\nconst ctx = canvas.getContext('2d');\\nconst dots = new Dots();\\ndots.drawDots(ctx);\\ncanvas.addEventListener('click', drawDot);\\nfunction drawDot(event) {\\n  const color = document.getElementById('color');\\n  const x = event.x - canvas.offsetLeft;\\n  const y = event.y - canvas.offsetTop;\\n  const newDot = new Dot(x, y, color.value);\\n  newDot.draw(ctx);\\n  dots.storeDot(newDot);\\n}\\n\"))), mdx(\"details\", null, mdx(\"summary\", null, \"4. Schritt: Alle Kreise \\xFCber zus\\xE4tzlichen Button l\\xF6schen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"class Dot {\\n  constructor(x, y, color) {\\n    this.x = x;\\n    this.y = y;\\n    this.color = color;\\n  }\\n\\n  draw(ctx) {\\n    ctx.fillStyle = this.color;\\n    ctx.beginPath();\\n    ctx.moveTo(this.x, this.y);\\n    ctx.arc(this.x, this.y, 10, 0, 2 * Math.PI);\\n    ctx.fill();\\n  }\\n}\\n\\nclass Dots {\\n  constructor(storageKey = 'dots') {\\n    this.storageKey = storageKey;\\n    this.dots = [];\\n    const dotsJSON = localStorage.getItem(storageKey) || '[]';\\n    for (let dot of JSON.parse(dotsJSON)) {\\n      this.dots[this.dots.length] = new Dot(dot.x, dot.y, dot.color);\\n    }\\n  }\\n\\n  storeDot(dot) {\\n    this.dots[this.dots.length] = dot;\\n    localStorage.setItem(this.storageKey, JSON.stringify(this.dots));\\n  }\\n\\n  clearDots() {\\n    this.dots = [];\\n    localStorage.removeItem(this.storageKey);\\n  }\\n\\n  drawDots(ctx) {\\n    for (let dot of this.dots) {\\n      dot.draw(ctx);\\n    }\\n  }\\n}\\n\\nconst canvas = document.getElementById('canvas');\\nconst ctx = canvas.getContext('2d');\\nconst dots = new Dots();\\ndots.drawDots(ctx);\\ncanvas.addEventListener('click', drawDot);\\nfunction drawDot(event) {\\n  const color = document.getElementById('color');\\n  const x = event.x - canvas.offsetLeft;\\n  const y = event.y - canvas.offsetTop;\\n  const newDot = new Dot(x, y, color.value);\\n  newDot.draw(ctx);\\n  dots.storeDot(newDot);\\n}\\n\\nconst clearButton = document.createElement('button');\\nclearButton.textContent = 'X';\\ncanvas.parentNode.insertBefore(clearButton, canvas);\\nclearButton.addEventListener('click', clearCanvas);\\n\\nfunction clearCanvas(event) {\\n  dots.clearDots();\\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\\n}\\n\"))), mdx(\"h1\", null, \"URL Parameter\"), mdx(\"p\", null, \"Kleine Informationsinhalte k\\xF6nnen auch als Parameter \\xFCber die URL \\xFCbergeben werden.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"an Adressteil mit \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"?\"), \" hinten angeh\\xE4ngt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in der Form \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"parameterName=parameterWert\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mehrere Parameter mit \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"&\"), \" verbunden\")), mdx(\"p\", null, \"Parameter sollten m\\xF6glichst Bezug zum Seiteninhalt haben und diesen spezifizieren, z. B. eine id f\\xFCr ein dargestelltes Item.\"), mdx(\"h3\", null, \"URLSearchParams\"), mdx(\"p\", null, \"Die Klasse \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"%22https://developer.mozilla.org/de/docs/Web/API/URLSearchParams%22\"\n  }, \"URLSearchParams\"), \" stellt Methoden zur Verf\\xFCgung, um die Parameter in JavaScript auszulesen.\"), mdx(\"p\", null, \"Beispiel: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://uhahne.github.io/GIS//lecture/json-localStorage/10/?id=123\"\n  }, \"https://uhahne.github.io/GIS//lecture/json-localStorage/10/?id=123\")), mdx(\"p\", null, \"-> nachfolgenden Code in Browserkonsole kopieren und ausf\\xFChren\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"const params = new URLSearchParams(window.location.search);\\nconst id = params.get('id');\\nconsole.log(id);\\n\")), mdx(\"h1\", null, \"Linksammlung\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://diveintohtml5.info/storage.html\"\n  }, \"http://diveintohtml5.info/storage.html\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://javascript.info/data-storage\"\n  }, \"https://javascript.info/data-storage\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://nolanlawson.com/2015/09/29/indexeddb-websql-localstorage-what-blocks-the-dom/\"\n  }, \"https://nolanlawson.com/2015/09/29/indexeddb-websql-localstorage-what-blocks-the-dom/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.derinformatikstudent.de/was-informatiker-ueber-datenschutz-wissen-sollten/\"\n  }, \"https://www.derinformatikstudent.de/was-informatiker-ueber-datenschutz-wissen-sollten/\")), mdx(\"h3\", null, \"JavaScript Prototyp Further Reading\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://prateeksurana.me/blog/how-javascript-classes-work-under-the-hood/\"\n  }, \"https://prateeksurana.me/blog/how-javascript-classes-work-under-the-hood/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.toptal.com/javascript/es6-class-chaos-keeps-js-developer-up\"\n  }, \"https://www.toptal.com/javascript/es6-class-chaos-keeps-js-developer-up\")), mdx(\"h3\", null, \"URL Parameter\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://wiki.selfhtml.org/wiki/URL-Parameter\"\n  }, \"https://wiki.selfhtml.org/wiki/URL-Parameter\")), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-localfileaccess\"\n  }, \"Ausnahme z. B. bei expliziten, sicherheitskritischen Einstellungen im Chrome Browser: --allow-file-access-from-files\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-localfileaccess\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-browsercache\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://de.wikipedia.org/wiki/Browser-Cache\"\n  }, \"Browser Cache\"), \": Puffer Speicher von Ressourcen im Browser; keine explizite Daten-Speicherung\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-browsercache\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-websql\"\n  }, \"Alternative \\\"Web SQL\\\" wurde nicht von W3C standardisiert.\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-websql\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"JSON und localStorage","date":"05. Dezember 2023"}}},"pageContext":{"id":"6bbc4914-cbfb-535a-a50d-fa5514bb91ca","heading":{"value":"JSON Konvertierung","depth":1},"index":8,"prevSlug":"/lecture/json-localStorage/7","nextSlug":"/lecture/json-localStorage/9"}},
    "staticQueryHashes": ["170874137"]}