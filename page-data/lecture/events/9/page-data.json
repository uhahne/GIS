{
    "componentChunkName": "component---src-components-lecture-page-layout-js",
    "path": "/lecture/events/9",
    "result": {"data":{"mdx":{"id":"572d2a5c-c025-5665-8dc3-c41e802d5459","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Events und JS Funktionen\",\n  \"date\": \"2023-11-14T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Event Beispiel\"), mdx(\"p\", null, \"Erm\\xF6glicht Code, der nicht sofort ausgef\\xFChrt werden soll, sondern erst, wenn ein bestimmtes Ereignis auftritt, z. B. ein Klick.\"), mdx(\"p\", null, \"Beispiel:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<div id=\\\"box\\\" />\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"#box {\\n  background-color: black;\\n  width: 100px;\\n  height: 50px;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"let box = document.getElementById('box');\\nbox.addEventListener('click', changeBGColor);\\nfunction changeBGColor(event) {\\n  let randomColor = Math.floor(Math.random() * 0xffffff).toString(16);\\n  event.currentTarget.style.backgroundColor = '#' + randomColor;\\n}\\n\")), mdx(\"p\", null, \"Vorgehen:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mit der Funktion \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"addEventListener\"), \" vermerken, auf welche Art von Event wie reagiert werden soll\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"welche Art von Event: z. B. das \\\"click\\\" Event\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wie reagiert werden: z. B. mit der \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"changeBGColor\"), \" Methode\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wenn das Event Auftritt, wird die Methode aufgerufen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Informationen zum Event werden an die Methode \\xFCbergeben\")), mdx(\"h1\", null, \"JavaScript Funktionen\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"function add(a, b) {\\n  return a + b;\\n}\\n\\nconsole.log(add(1, 2));\\ngreetings();\\n\\nfunction greetings() {\\n  console.log('Hallo');\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signalwort \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Name + Parameterliste in runden Klammern (wie in Java)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"keine Datentypen\"), \" bei \\xDCbergabeparametern und kein R\\xFCckgabedatentyp\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"optional: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"return\"), \" Befehl um Funktion zu beenden und ggf. Wert zur\\xFCck zu geben (wenn Wert hinter return steht)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Aufruf \\xFCber Name() und ggf. Werte in runder Klammer\")), mdx(\"h3\", null, \"Default Werte f\\xFCr die \\xDCbergabe definieren:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mit \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"= wert\"), \" hinter Parameternamen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Defaultwert wird verwendet, wenn beim Aufruf f\\xFCr einen Parameter kein Wert \\xFCbergeben wird (sonst \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"undefined\"), \")\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"function greetings(word = 'Hallo') {\\n  console.log(word);\\n}\\ngreetings(); // Ausgabe: Hallo\\ngreetings('Hi'); // Ausgabe: Hi\\n\")), mdx(\"h1\", null, \"Events (Ereignisse)\"), mdx(\"p\", null, \"Begriffe:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Event\"), \" ist das Ereignis das auftritt.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Event Target\"), \" ist das DOM Objekt, f\\xFCr welches ein \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Event\"), \" behandelt werden soll.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Event Handler\"), \" ist die Funktion, die beim Auftreten des Events am Event Target ausgef\\xFChrt werden soll.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Event Listener\"), \" wird beim Event Target angelegt, um beim Auftreten des Events den Handler aufrufen zu k\\xF6nnen.\")), mdx(\"p\", null, \"Beispiel:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"let box = document.getElementById('box');\\nbox.addEventListener('click', changeBGColor);\\nfunction changeBGColor(event) {\\n  let randomColor = Math.floor(Math.random() * 0xffffff).toString(16);\\n  event.currentTarget.style.backgroundColor = '#' + randomColor;\\n}\\n\")), mdx(\"h3\", null, \"Event registrieren\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Funktion\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"eventTarget.addEventListener(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"type\"), \": string, \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"handler\"), \": Function)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"tritt Event vom Typ \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"type\"), \" bei \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"eventTarget\"), \" auf, wird die \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"handler\"), \" Funktion aufgerufen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"eventTarget.removeEventListener(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"type\"), \": string, \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"handler\"), \": Function)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"tritt Event vom Typ \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"type\"), \" bei \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"eventTarget\"), \" auf, wird die \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"handler\"), \" Funktion \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"nicht mehr\"), \" aufgerufen\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"eventTarget kann z. B. window, document, DOMElement sein\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mehrere Listener (auch gleicher Typ aber unterschiedlicher Handler) f\\xFCrs gleiche eventTarget m\\xF6glich\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hinweis: inline event handler \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"nicht verwenden\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<div onclick=\\\"handlerFunction Code\\\"/>\"), \", bzw. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eventTarget.onclick\"), \"), da weder mehrere Handler, noch remove m\\xF6glich\")), mdx(\"h3\", null, \"Arten von Events\"), mdx(\"p\", null, \"Es gibt verschiedene Events (Event und Kindklassen von Event), die ausgel\\xF6st werden k\\xF6nnen, z. B.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Event (load, scroll, input, submit)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MouseEvent (click, mouseover); KeyboardEvent (keydown)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UIEvent (resize)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"FokusEvent (focus, blur)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"weitere: DeviceMotionEvent, ErrorEvent, ...\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3schools.com/jsref/dom_obj_event.asp\"\n  }, \"Liste von Events w3schools\"), \"; \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3schools.com/jsreF/obj_events.asp\"\n  }, \"Arten von Events w3schools (gebr\\xE4uchlichste)\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/Events\"\n  }, \"Liste von Events MDN\"), \"; \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/API/Event#introduction\"\n  }, \"Arten von Events MDN\")), mdx(\"h3\", null, \"Event Informationen\"), mdx(\"p\", null, \"Beim Aufruf der Handler Funktion wird ein Event Objekt \\xFCbergeben, mit Informationen \\xFCber das Event, z. B.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Eigenschaft\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"currentTarget\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"EventTarget, an dem die handler Funktion registriert wurde\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"target\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DOM Objekt, an dem das Event aufgetreten ist (siehe bubbling)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Art von Event\")))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3schools.com/jsreF/obj_event.asp\"\n  }, \"Event Objekt\")), mdx(\"h1\", null, \"Funktionsweise von Events\"), mdx(\"p\", null, \"Pseudocode:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"class EventTarget {\\n  listener = [];\\n  function addEventListener(type, handlerFct){\\n    listener.push({type, handlerFct});\\n  }\\n  function onEvent(type, eventInfos){\\n    foreach(l of listener){\\n      if(l.type == type){\\n        l.handlerFct(eventInfos)\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"das \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"EventTarget\"), \" stellt Funktionalit\\xE4t zum Behandeln von Events zur Verf\\xFCgung\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"onEvent\"), \" wird von der JavaScript Engine aufgerufen, wenn das entsprechende Event auftritt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Handler, die sich f\\xFCr das Ereignis registriert haben (per addEventListener), werden aufgerufen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dem Handler werden Informationen \\xFCber das Event in Form eines Objektes \\xFCbergeben\")), mdx(\"h3\", null, \"Event Queue\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Alle Events, f\\xFCr die Handler Funktionen am Event Target registriert wurden, werden in eine Warteschlange eingereiht, wenn das Event auftritt.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Die Warteschlange wird der Reihenfolge nach abgearbeitet.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop\"\n  }, \"weitere Details\"))), mdx(\"h1\", null, \"capturing and bubbling (Einfangen und Blubbern)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tritt ein Event an einem Event Target auf, so k\\xF6nnen auch die Eltern Elemente im DOM Baum darauf reagieren.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Von der Reihenfolge kann erst der Handler der Eltern, oder der des Targets aufgerufen werden.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Um beide Reihenfolgen zu erm\\xF6glichen startet das Event bei der Wurzel und l\\xE4uft durch bis zum Target (Capturing) und zur\\xFCck zur Wurzel (Bubbling).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Je nach Einstellung wird es schon beim Capturing (muss explizit bei addEventListener angegeben werden) oder erst beim Bubbling (Default Einstellung) behandelt.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Normalerweise wird also erst die Handler Funktion des Targets ausgef\\xFChrt, dann die der Eltern des Targets, und zum Schluss die der Wurzel (bzw. dar\\xFCber noch document und window).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"eventObjekt.stopPropagation()\"), \" f\\xFChrt dazu, dass das Event nicht mehr weitergereicht wird (kann unerw\\xFCnschtes Verhalten verhindern).\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3.org/TR/uievents/#event-flow\"\n  }, \"Grafik\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<div id=\\\"box\\\"><button>Click me</button></div>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"#box {\\n  background-color: green;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"let box = document.getElementById('box');\\nbox.addEventListener('click', divHi); // bubbling\\n// box.addEventListener(\\\"click\\\", divHi, true); // capturing\\nfunction divHi(event) {\\n  console.log('div: Hi');\\n  console.log(event.currentTarget);\\n  console.log(event.target);\\n}\\nlet button = document.getElementsByTagName('button')[0];\\nbutton.addEventListener('click', buttonHi);\\nfunction buttonHi(event) {\\n  console.log('button: Hi');\\n  // event.stopPropagation();\\n}\\n\")), mdx(\"h1\", null, \"JS Funktionen Besonderheiten\"), mdx(\"p\", null, \"JavaScript unterst\\xFCtzt funktionalen Programmieransatz:\", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-java-funktional\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-java-funktional\",\n    \"className\": \"footnote-ref\"\n  }, \"java-funktional\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Funktionen in Variablen speicherbar (mit Funktionsausdruck oder Pfeilfunktion) = \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Glossary/First-class_Function\"\n  }, \"Funktion erster Klasse\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Funktionen h\\xF6herer Ordnung (hat Funktion als \\xDCbergabeparameter und/oder R\\xFCckgabewert)\")), mdx(\"h2\", null, \"JS Funktionsausdr\\xFCcke\"), mdx(\"h3\", null, \"Funktion in Variable speichern\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"function greetings() {\\n  console.log('Hi');\\n}\\nlet greetings2 = greetings;\\ngreetings();\\ngreetings2();\\n\")), mdx(\"p\", null, \"oder:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Funktion kann direkt einer Variablen zugewiesen werden (als sogenannter Funktionsausdruck)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Funktionsname (hinter \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \") dann nur innerhalb der Funktion definiert (um sich z. B. selbst aufzurufen -> Rekursion)\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"let greetings2 = function greetings() { console.log(\\\"Hi\\\"); }\\n// Achtung: Aufruf greetings() w\\xFCrde hier Fehler werfen\\ngreetings2():\\n\")), mdx(\"h3\", null, \"anonyme Funktion\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"der Funktionsname (hinter \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \") kann beim direkten Zuweisen auch weggelassen werden\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"let greetings2 = function() { console.log(\\\"Hi\\\"); }\\ngreetings2();\\n\")), mdx(\"h3\", null, \"Pfeilfunktion\"), mdx(\"p\", null, \"Verk\\xFCrzte Schreibweise f\\xFCr anonyme Funktionen:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signalwort \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \" wird durch einen \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"=>\"), \" Pfeil zwischen runden und geschweiften Klammern ersetzt\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"let greetings2 = () => {\\n  console.log('Hi');\\n};\\ngreetings2();\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Functions/Arrow_functions\"\n  }, \"Pfeilfunktion Besonderheiten\")), mdx(\"h3\", null, \"Variablenwert kann ge\\xE4ndert werden\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"let x = -3;\\nlet info = function () {\\n  console.log('positiv');\\n};\\nif (x < 0) {\\n  info = function () {\\n    console.log('negativ');\\n  };\\n}\\ninfo();\\n\")), mdx(\"h2\", null, \"JS Funktionen h\\xF6herer Ordnung\"), mdx(\"h3\", null, \"Funktionen als \\xDCbergabeparameter\"), mdx(\"p\", null, \"Funktionen k\\xF6nnen an andere Funktionen \\xFCbergeben werden:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"function call(f) {\\n  f();\\n}\\n\\nlet greetings = function () {\\n  console.log('Hi');\\n};\\n\\ncall(greetings);\\n\")), mdx(\"p\", null, \"oder:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"function call(f) {\\n  f();\\n}\\n\\ncall(function () {\\n  console.log('Hi');\\n});\\n\")), mdx(\"h3\", null, \"Funktion als R\\xFCckgabewert\"), mdx(\"p\", null, \"Eine Funktion kann eine Funktion als R\\xFCckgabewert zur\\xFCckgeben:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"function getFunction() {\\n  return function () {\\n    console.log('Hi');\\n  };\\n}\\n\\nlet greetings = getFunction();\\ngreetings();\\n\")), mdx(\"p\", null, \"oder mit Parameter:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"function getFunction() {\\n  return function (text) {\\n    console.log(text);\\n  };\\n}\\n\\nlet greetings = getFunction();\\ngreetings('Hallo');\\n\")), mdx(\"h2\", null, \"JS verschachtelte Funktionen\"), mdx(\"p\", null, \"Anders als in Java kann in JavaScript eine Funktion innerhalb einer anderen definiert werden:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"function info() {\\n  function add(a, b) {\\n    return a + b;\\n  }\\n  console.log('1 + 2 = ' + add(1, 2));\\n}\\n\\ninfo();\\n//Achtung: Aufruf add(1,2) w\\xFCrde hier Fehler werfen, da add nur innerhalb von info existiert\\n\")), mdx(\"h2\", null, \"JS Parameterliste\"), mdx(\"p\", null, \"Funktionen sind in JavaScript Objekte, die \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"\n  }, \"vordefinierte Eigenschaften\"), \" haben.\"), mdx(\"h3\", null, \"arguments\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Arguments ist ein Array-\\xE4hnliches Objekt\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-argumentsobject\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-argumentsobject\",\n    \"className\": \"footnote-ref\"\n  }, \"argumentsobject\")), \" mit allen \\xFCbergebenen Werten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"es k\\xF6nnen auch mehr Werte \\xFCbergeben werden, als Parameter zur Verf\\xFCgung stehen (normalerweise nicht sinnvoll)\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"function log(a, b) {\\n  for (let n of arguments) {\\n    console.log(n);\\n  }\\n}\\nlog(1, 2, 3, 4);\\n\")), mdx(\"h3\", null, \"Rest Parameter\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"es k\\xF6nnen beliebig viele Parameter \\xFCbergeben werden, die in einem Array Parameter (Rest Parameter) zusammengefasst werden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rest Parameter steht immer am Ende der Parameterliste und wird mit \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"...\"), \" vor dem Namen gekennzeichnet\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"function sum(firstValue, ...furtherValues) {\\n  let result = firstValue;\\n  for (let n of furtherValues) {\\n    result += n;\\n  }\\n  return result;\\n}\\n\\nlet x = sum(1, 2, 3, 4);\\nconsole.log(x);\\nconsole.log(sum(1, 2));\\n\")), mdx(\"h1\", null, \"Linksammlung\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/API\"\n  }, \"https://developer.mozilla.org/de/docs/Web/API\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://caniuse.com/\"\n  }, \"https://caniuse.com/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://wiki.selfhtml.org/wiki/JavaScript/DOM/Event/Ereignisbehandlung\"\n  }, \"https://wiki.selfhtml.org/wiki/JavaScript/DOM/Event/Ereignisbehandlung\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\"\n  }, \"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Functions\"\n  }, \"https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Functions\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/playlist?list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP\"\n  }, \"Namaste JavaScript YouTube playlist by Akshai Saini\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://dev.to/narottam04/how-javascript-works-visually-explained-269j\"\n  }, \"How JavaScript Works\\uD83D\\uDD25 \\uD83E\\uDD16 [Visually Explained] by Narottam04\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://dev.to/lydiahallie/series/3341\"\n  }, \"JavaScript Visualized Series' Articles by Lydia Hallie\")), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-java-funktional\"\n  }, \"Auch Java erlaubt seit Java 8 funktionale Programmierung, siehe \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://openbook.rheinwerk-verlag.de/javainsel/11_006.html\"\n  }, \"https://openbook.rheinwerk-verlag.de/javainsel/11_006.html\"), mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-java-funktional\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-argumentsobject\"\n  }, \"Bietet keine Array Methoden, sondern spezifische Eigenschaften, erlaubt aber den Zugriff \\xFCber arguments\", \"[\", \"index\", \"]\", \", wie bei Arrays.\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-argumentsobject\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Events und JS Funktionen","date":"14. November 2023"}}},"pageContext":{"id":"572d2a5c-c025-5665-8dc3-c41e802d5459","heading":{"value":"JS verschachtelte Funktionen","depth":2},"index":9,"prevSlug":"/lecture/events/8","nextSlug":"/lecture/events/10"}},
    "staticQueryHashes": ["170874137"]}