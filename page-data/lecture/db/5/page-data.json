{
    "componentChunkName": "component---src-components-lecture-page-layout-js",
    "path": "/lecture/db/5",
    "result": {"data":{"mdx":{"id":"5efc92f2-8e43-58ab-beca-61b665157f70","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Relationale Datenbanken\",\n  \"date\": \"2024-06-03T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar SQLTable = makeShortcode(\"SQLTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Datenbanken\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Daten verwalten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"m\\xF6gliche Anforderungen:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gro\\xDFe Menge an Daten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"schneller Zugriff\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"paralleler Zugriff von mehreren Nutzern\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Konsistenz (Korrektheit der Daten)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sicherheit (Schutz vor unbefugtem Zugriff)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Datenbankmanagementsystem (DBMS): Software, die den Zugriff auf Daten regelt\")), mdx(\"h3\", null, \"CRUD-Operationen\"), mdx(\"p\", null, \"Persistente (dauerhafte) Speicher bieten meist vier grundlegende Operationen zur Verwaltung der gespeicherten Daten:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create (neu hinzuf\\xFCgen)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read (auslesen)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Update (\\xE4ndern)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Delete (l\\xF6schen)\")), mdx(\"h3\", null, \"Transaktionen\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bestehen aus einer oder mehreren zusammengeh\\xF6rigen Operationen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Beispiel Transaktion: Geld von einem zum anderen Konto transferieren\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Konto1 -> Geld abbuchen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Konto2 -> Geld aufbuchen\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"kommt es zu Fehlern bei einer Operation, wird die Transaktion wieder r\\xFCckg\\xE4ngig gemacht und der urspr\\xFCngliche Zustand wiederhergestellt\")), mdx(\"h3\", null, \"ACID Eigenschaften\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Atomarit\\xE4t (Abgeschlossenheit): Transaktion muss vollst\\xE4ndig erfolgreich abgeschlossen sein -> sonst Rollback (urspr\\xFCnglicher Zustand wiederherstellen) -> z. B. Abbuchung ohne Auszahlung verhindern\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Konsistenzerhaltung: Daten m\\xFCssen (entsprechend festgelegten Regeln) nach Transaktion weiter korrekt sein -> z. B. nicht unterschiedliche Schreibweise f\\xFCr gleiche Information\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Isolation (Abgrenzung): parallele Zugriffe m\\xFCssen zum gleichen Ergebnis f\\xFChren wie serielle (z. B. durch Sperrvermerk) -> z. B. Doppelbuchungen verhindern\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dauerhaftigkeit: Daten\\xE4nderungen durch erfolgreiche Transaktionen bleiben bestehen -> kein Datenverlust, auch bei Systemausfall -> z. B. Bestellung nach Abschluss sicher gespeichert\")), mdx(\"h1\", null, \"Relationale Datenbanken\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bestehen aus Tabellen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabelle hat Eintr\\xE4ge (in Zeilen)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabelle speichert Auswahl an Eigenschaften f\\xFCr jeden Eintrag (in Spalten)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"jeder Eintrag hat einen eindeutigen Schl\\xFCssel (einzelne Eigenschaft, oder Kombination aus Eigenschaften) = Primary Key\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Schl\\xFCssel ist oft eine fortlaufende ID\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabellen k\\xF6nnen \\xFCber den Schl\\xFCssel miteinander verbunden sein (Schl\\xFCssel als Eigenschaft in anderer Tabelle) = Foreign Key\")), mdx(\"h4\", null, \"Beispiel (Schl\\xFCssel unterstrichen):\"), mdx(SQLTable, {\n    title: \"Student\",\n    mdxType: \"SQLTable\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"MatrikelNr\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Vorname\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Nachname\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Studiengang\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Semester\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"123456\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Klaus\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Meng\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"234567\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Verena\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Rist\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"6\"))))), mdx(SQLTable, {\n    title: \"Veranstaltung\",\n    mdxType: \"SQLTable\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"ID\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fakult\\xE4t\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"C#\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Zeichnen\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"))))), mdx(SQLTable, {\n    title: \"Studiengang\",\n    mdxType: \"SQLTable\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"ID\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fakult\\xE4t\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"MIB\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"OMB\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"3\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"MKB\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"))))), mdx(SQLTable, {\n    title: \"Fakult\\xE4t\",\n    mdxType: \"SQLTable\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"ID\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DM\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"IN\"))))), mdx(SQLTable, {\n    title: \"Belegung\",\n    mdxType: \"SQLTable\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"Student\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"Veranstaltung\")))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"123456\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"123456\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"))))), mdx(\"h3\", null, \"Normalisierung\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Datens\\xE4tze auf mehrere Tabellen aufteilen, um Redundanzen zu vermeiden und daraus resultierende Inkonsistenzen (ungleiche Angaben zur gleichen Information)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"erste Normalform:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spalte soll immer nur Einzelwert beinhalten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"z. B. Name in Vorname, Nachname aufteilen\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zweite Normalform:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabelle soll immer nur einen Sachverhalt abbilden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nichtschl\\xFCssel m\\xFCssen von allen Schl\\xFCsseln abh\\xE4ngig sein\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"z. B. Student und Veranstaltung in getrennte Tabellen,\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"da Name, Studiengang, Fakult\\xE4t, Semester nur von MatrikelNr abh\\xE4ngig, nicht von VeranstaltungsId\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"und VeranstName, VeranstFakult\\xE4t nur von VeranstaltungsId abh\\xE4ngig, nicht von MatrikelNr\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Verbindung der getrennten Tabellen durch Fremdschl\\xFCssel, z. B. weitere Tabelle f\\xFCr Belegung (MatrikelNr + VerantaltungsId)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dritte Normalform:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabellen sollen nur direkte Abh\\xE4ngigkeiten beinhalten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nichtschl\\xFCssel d\\xFCrfen nicht voneinander abh\\xE4ngig sein\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"z. B. Studiengang und Fakult\\xE4t in eigene Tabelle, da MatrikelNr -> Studiengang und Studiengang -> Fakult\\xE4t\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-transitiveabh\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-transitiveabh\",\n    \"className\": \"footnote-ref\"\n  }, \"transitiveabh\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gibt noch vierte und f\\xFCnfte Normalform, um weitere Redundanzen zu vermeiden\")), mdx(\"h4\", null, \"Nicht normalisierte Tabelle:\"), mdx(SQLTable, {\n    title: \"Student\",\n    mdxType: \"SQLTable\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"MatrikelNr\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Studiengang\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fakult\\xE4t\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Semester\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"VeranstaltungsId\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"VeranstName\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"VeranstFakult\\xE4t\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"123456\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Klaus Meng\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"OMB\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DM\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"C#\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"IN\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"123456\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Klaus Meng\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"OMB\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DM\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Zeichnen\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DM\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"234567\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Verena Rist\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"MIB\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DM\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"6\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))))), mdx(\"h1\", null, \"SQL Basics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL = Structured Query Language (Strukturierte Abfrage Sprache)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sprache zur Verwaltung und zum Zugriff auf relationale Datenbanken\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bekannte Opensource relationale Datenbanken: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.mysql.com/de/\"\n  }, \"MySQL\"), \", \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mariadb.org/\"\n  }, \"MariaDB\"))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SQL Befehl\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CREATE DATABASE db_name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Datenbank anlegen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DROP DATABASE db_name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Datenbank l\\xF6schen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CREATE TABLE table_name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tabelle anlegen (leere neu anlegen, oder aus existierenden Daten)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ALTER TABLE table_name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tabelle nachtr\\xE4glich ver\\xE4ndern (Spalten hinzuf\\xFCgen, l\\xF6schen, umbenennen)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DROP TABLE table_name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tabelle l\\xF6schen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"INSERT INTO table_name VALUES (value1, value2, ...)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Neuen Eintrag in Tabelle\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SELECT columns FROM table_name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"einzelne Spalten ausw\\xE4hlen (\", \"*\", \" f\\xFCr alle)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SELECT columns FROM table_name WHERE column=value\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Auswahl filtern (mehrere Bedingungen mit AND und OR verkn\\xFCpfen)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SELECT columns FROM table_name ORDER BY column\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Auswahl sortieren\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UPDATE table_name SET column=wert WHERE column=value\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Eintrag in Tabelle \\xE4ndern\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE FROM table_name WHERE column=value\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Eintrag aus Tabelle l\\xF6schen\")))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3schools.com/sql/sql_intro.asp\"\n  }, \"weitere\")), mdx(\"h3\", null, \"Beispiel: einzelne Tabelle\"), mdx(\"p\", null, \"Web SQL (veraltet, aber hier zum Testen)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024);\\n\")), mdx(\"p\", null, \"Google Chrome Entwicklungsumgebung -> Application -> WebSQL -> mydb -> Befehle eingeben (unter Application, nicht Console)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"CREATE TABLE table_name (\\ncolumn1 datatype constraint,\\ncolumn2 datatype constraint\\n...\\n)\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.w3schools.com/sql/sql_datatypes.asp\"\n  }, \"Data Types\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.w3schools.com/sql/sql_constraints.asp\"\n  }, \"Constraints\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NOT NULL = muss Wert haben\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UNIQUE = muss einmalig sein\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PRIMARY KEY = NOT NULL + UNIQUE\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"FOREIGN KEY = Verkn\\xFCpfung zu PRIMARY KEY von anderer Tabelle\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"CREATE TABLE student (\\n  studentNr INT PRIMARY KEY,\\n  firstName TEXT,\\n  lastName TEXT,\\n  course TEXT NOT NULL);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"ALTER TABLE student \\nADD semester INT;\\n\")), mdx(\"p\", null, \"Zeilen einzeln nacheinander eingeben:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"INSERT INTO student VALUES (123, \\\"Klaus\\\", \\\"Meng\\\", \\\"OMB\\\", 2);\\nINSERT INTO student VALUES (456, \\\"Verena\\\", \\\"Rist\\\", \\\"MIB\\\", 6);\\nINSERT INTO student VALUES (789, \\\"Samantha\\\", \\\"Holz\\\", \\\"OMB\\\", 1);\\n\")), mdx(\"p\", null, \"mydb -> student (Tabelle betrachten)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT lastName FROM student;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT firstName, lastName FROM student WHERE course=\\\"OMB\\\";\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT firstName, lastName FROM student WHERE course=\\\"OMB\\\" ORDER BY lastName;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"UPDATE student SET semester=3 WHERE studentNr=123;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"DELETE FROM student WHERE studentNr=789;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"DROP TABLE student\\n\")), mdx(\"h1\", null, \"SQL Joins + View\"), mdx(\"h3\", null, \"Tabellen verbinden:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Normalisierung: Datens\\xE4tze auf mehrere Tabellen aufteilen, um Redundanzen zu vermeiden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabellen \\xFCber eine Spalte verbunden \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"(Foreign key)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"K\\xF6nnen beim Abruf zu einer Tabelle zusammengef\\xFChrt werden \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"(Join)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ergebnis kann als virtuelle Tabelle gespeichert werden \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"(View)\"))), mdx(\"h3\", null, \"Foreign key\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Werte in Spalte verweisen auf Primary key von anderer Tabelle\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Constraint, der f\\xFCr Spalte mit angegeben wird\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Befehl: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"FOREIGN KEY (spalte) REFERENCES table_name(key)\"))), mdx(\"h3\", null, \"Joins\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Typ\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Funktion\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"INNER JOIN\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Schnittmenge (nur die Eintr\\xE4ge, f\\xFCr die es einen Eintrag in der gejointen Tabelle gibt)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LEFT JOIN\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tabelle + Schnittmenge (alle Eintr\\xE4ge der Tabelle + soweit vorhanden dazu passende Eintr\\xE4ge der gejointen Tabelle)\")))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3schools.com/sql/sql_join.asp\"\n  }, \"gibt noch weitere\")), mdx(\"h3\", null, \"View\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Virtuelle Tabelle mit zusammengef\\xFChrten Daten aus bestehenden Tabellen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"z. B. Erzeugung von Datens\\xE4tzen passend f\\xFCr Anzeige in Anwendung\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Befehl: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CREATE VIEW view_name AS\"), \" + Daten (z. B. durch SELECT ausgew\\xE4hlt)\")), mdx(\"h3\", null, \"Beispiel\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"umgesetzt mit \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.sqlite.org/\"\n  }, \"SQLite\"), \" (einfache SQL Datenbank f\\xFCr Prototypen; besteht aus einer Datei)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://sqlitebrowser.org/\"\n  }, \"https://sqlitebrowser.org/\"), \" (Programm zum Zugriff auf SQLite Datenbank -> herunterladen)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://uhahne.github.io/GIS/hochschule.db\",\n    download: true\n  }, \"hochschule.db\"), \" (SQLite Datenbank-Datei mit Beispieldaten -> Rechtsklick -> Speichern unter)\")), mdx(\"h4\", null, \"INNER JOIN\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT *\\nFROM student\\nINNER JOIN course ON student.course = course.id;\\n\")), mdx(\"p\", null, \"gleiches Ergebnis:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT *\\nFROM course\\nINNER JOIN student ON student.course = course.id;\\n\")), mdx(\"h4\", null, \"LEFT JOIN\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT *\\nFROM course\\nLEFT JOIN student ON student.course = course.id;\\n\")), mdx(\"h4\", null, \"verschachtelter JOIN\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT student.studentNr, student.firstName, student.lastName, course.name AS \\\"course\\\", faculty.name AS \\\"faculty\\\"\\nFROM (student\\nINNER JOIN course ON student.course = course.id)\\nINNER JOIN faculty ON course.faculty = faculty.id;\\n\")), mdx(\"h4\", null, \"VIEW\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"CREATE VIEW student_data AS\\nSELECT student.studentNr, student.firstName, student.lastName, course.name AS \\\"course\\\", faculty.name AS \\\"faculty\\\"\\nFROM (student\\nINNER JOIN course ON student.course = course.id)\\nINNER JOIN faculty ON course.faculty = faculty.id;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT * FROM student_data\\n\")), mdx(\"h1\", null, \"SQLite + Node.js\"), mdx(\"h3\", null, \"Einrichten\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"SQLite Module f\\xFCr Node.js installieren (in Projektordner)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install sqlite3\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install sqlite\"))))), mdx(\"h3\", null, \"SQLite in Node.js verwenden\"), mdx(\"h4\", null, \"SQLite Modul in Node.js Code verwenden\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"const sqlite3 = require('sqlite3');\\nconst sqlite = require('sqlite');\\n\")), mdx(\"h4\", null, \"Mit Datenbank verbinden\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"const dbFilePath = 'pathToFile/sqliteFileName.db';\\nconst db = await sqlite.open({\\n  filename: dbFilePath,\\n  driver: sqlite3.Database,\\n});\\n\")), mdx(\"h4\", null, \"SQL Befehle ausf\\xFChren\"), mdx(\"p\", null, \"Zum Beispiel mehrere Eintr\\xE4ge auslesen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"console.log(await db.all('SELECT * FROM student'));\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL Befehl an db Funktion \\xFCbergeben\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"verschiedene db Funktionen f\\xFCr auslesen (db.all oder db.get), db anlegen (db.exec), Eintr\\xE4ge einf\\xFCgen (db.run)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/sqlite\"\n  }, \"weitere Informationen\"))), mdx(\"h3\", null, \"Node.js Beispiel\"), mdx(\"a\", {\n    href: \"https://uhahne.github.io/GIS/hochschule.db\",\n    download: true\n  }, \"hochschule.db\"), \" Datei in Projektordner legen\", mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"const sqlite3 = require('sqlite3');\\nconst sqlite = require('sqlite');\\n\\nconst dbFilePath = 'hochschule.db'; // sqlite Datei\\n\\nasync function main() {\\n  // open the database\\n  const db = await sqlite.open({\\n    filename: dbFilePath,\\n    driver: sqlite3.Database,\\n  });\\n\\n  const students = await db.all('SELECT * FROM student');\\n  console.log(students);\\n  await db.close();\\n}\\n\\nmain();\\n\")), mdx(\"h1\", null, \"Server API\"), mdx(\"p\", null, \"Server Application Programming Interface (API)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Schnittstelle, die festlegt, wie mit dem Server kommuniziert werden kann\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Daten \\xFCber AJAX senden und abrufen, die auf dem Server in einer Datenbank gespeichert werden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CRUD Operationen als Schnittstelle\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"verschiedene Ans\\xE4tze m\\xF6glich\")), mdx(\"h3\", null, \"Individuelle API\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"eigene URLs definieren, \\xFCber die Daten empfangen und abgerufen werden k\\xF6nnen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"z. B. URLs: /addItem, /getItem, /updateItem, /deleteItem (Namen k\\xF6nnen beliebig gew\\xE4hlt werden)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"z. B. ID bei get, update und delete \\xFCber Suchparameter mit angegeben\")), mdx(\"h3\", null, \"JSON API\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JSON Daten senden, die nicht nur die Anwendungsdaten beinhalten, sondern auch Anweisungen zur Verarbeitung\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"z. B. {operation: \\\"add\\\", data: {...}} (Werte f\\xFCr operation dann z. B. add, get, update, delete)\")), mdx(\"h3\", null, \"REST API\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"standardisierte Schnittstelle, definiert von Roy Fielding (REST = Representational State Transfer)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"kann unterschiedlich strikt implementiert werden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"nutzt die HTTP Methoden, um CRUD Operationen abzubilden (add = POST, get = GET, update = PUT, delete = DELETE)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Resource wird \\xFCber URL beschrieben (Name als Mehrzahl, z. B. items)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ID wird mit in die URL integriert (z. B. GET /items -> alle Items; GET items/2 -> Item mit ID 2)\")), mdx(\"h3\", null, \"Weitere\"), mdx(\"p\", null, \"z. B. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://de.wikipedia.org/wiki/SOAP\"\n  }, \"SOAP\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://graphql.org/\"\n  }, \"GraphQL\")), mdx(\"h1\", null, \"Linksammlung\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://link.springer.com/content/pdf/10.1007%2F978-3-030-42224-0.pdf\"\n  }, \"https://link.springer.com/content/pdf/10.1007%2F978-3-030-42224-0.pdf\")), mdx(\"h3\", null, \"Normalisierung\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.ionos.de/digitalguide/hosting/hosting-technik/normalisierung-von-datenbanken/\"\n  }, \"https://www.ionos.de/digitalguide/hosting/hosting-technik/normalisierung-von-datenbanken/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.php-kurs.com/normalisierung.htm\"\n  }, \"https://www.php-kurs.com/normalisierung.htm\")), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-transitiveabh\"\n  }, \"Transitive Abh\\xE4ngigkeit: aus der Abh\\xE4ngigkeit a -> b und b -> c folgt, dass auch a -> c\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-transitiveabh\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Relationale Datenbanken","date":"03. Juni 2024"}}},"pageContext":{"id":"5efc92f2-8e43-58ab-beca-61b665157f70","heading":{"value":"SQLite + Node.js","depth":1},"index":5,"prevSlug":"/lecture/db/4","nextSlug":"/lecture/db/6"}},
    "staticQueryHashes": ["170874137"]}